[{"/Users/charlenelfj/Desktop/colour-picker/src/App.tsx":"1","/Users/charlenelfj/Desktop/colour-picker/src/index.tsx":"2","/Users/charlenelfj/Desktop/colour-picker/src/reportWebVitals.ts":"3","/Users/charlenelfj/Desktop/colour-picker/src/Home.tsx":"4"},{"size":1768,"mtime":1610466840296,"results":"5","hashOfConfig":"6"},{"size":531,"mtime":1610467366191,"results":"7","hashOfConfig":"6"},{"size":425,"mtime":1610385947199,"results":"8","hashOfConfig":"6"},{"size":3808,"mtime":1611072167740,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lynwa",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/charlenelfj/Desktop/colour-picker/src/App.tsx",["19","20"],"/Users/charlenelfj/Desktop/colour-picker/src/index.tsx",[],"/Users/charlenelfj/Desktop/colour-picker/src/reportWebVitals.ts",[],"/Users/charlenelfj/Desktop/colour-picker/src/Home.tsx",["21","22","23","24"],"import React, { useEffect, useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport ColorizeIcon from '@material-ui/icons/Colorize';\nimport TuneIcon from '@material-ui/icons/Tune';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport $ from 'jquery';\n\ninterface LooseObject {\n  [key: string]: any;\n}\n\nconst Home: React.FunctionComponent<{}> = () => {\n\n  let bgPage;\n  const [pointerEnabled, setPointerEnabled] = useState(false);\n  const [showDisabledMessage, setShowDisabledMessage] = useState(false);\n  const [tab, setTab] = useState<LooseObject>({});\n\n  const hello = () => {\n    document.body.style.backgroundColor = \"#000000\";\n  }\n\n  const showPointer = () => {\n    // here we will call the background method\n    // console.log(tab)\n    if (pointerEnabled) {\n      chrome.runtime.sendMessage({picker: tab}, (response) => {\n        console.log(response);\n        console.log(\"sending message\");\n      })\n    }\n\n    // chrome.runtime.getBackgroundPage((backgroundPage) => {\n    //   console.log(backgroundPage);\n    // })\n  }\n\n  // const showPointer = () => {\n  //   console.log(tab)\n  //   // you need to hide the window and show the cursor\n  //   // maybe we can send a message to the bg script and ask them to close??\n  //   // chrome.runtime.sendMessage({greeting: \"hello\"}, function(response) {\n  //   //   console.log(response);\n  //   //   console.log(\"sending message to close the popup\");\n  //   // });\n\n  //   // we will activate the picker here\n  //   // need to change cursor to the cross hair type\n\n  //   // if you want to do function call then you might need to create a file then\n  //   // call the init function\n  //   let color = 'green';\n  //   document.body.style.cursor = 'crosshair';\n  //   // chrome.tabs.executeScript(\n  //   //   tab.id,\n  //   //   {code: 'document.body.style.backgroundColor = \"' + color + '\";'}\n  //   // )\n    // chrome.tabs.executeScript(\n    //   tab.id,\n    //   {file: '/dropper.ts'}\n    // )\n\n  //   // window.close();\n    \n  // }\n\n  useEffect(() => {\n    // here you need to check if the page is loaded???\n    // if its loaded then we set pointer to true\n    // else we show error message\n    chrome.tabs.query({active: true}, (tabs) => {\n      if (tabs[0].active === true) {\n\n        // check tabs if the url is valid\n        if (tabs[0].url === undefined) {\n          setShowDisabledMessage(true);\n        }\n        // if its in special page, then extension won't work from here as well\n        else if (tabs[0].url.match(/^(file|chrome:\\/\\/)+/g)) {\n          setShowDisabledMessage(true);\n        }\n        else {\n          setPointerEnabled(true);\n          setTab(tabs[0]);\n        }\n      }\n    })\n\n    console.log(document.readyState);\n\n    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n      if (request === \"close-window\") {\n        window.close();\n      }\n    })\n  }, []);\n\n  return (\n    <div style={{ height: '350px', width: '300px'}}>\n      <Grid \n        container\n        direction=\"column\"\n      >\n        {showDisabledMessage ?\n          <Typography variant=\"caption\">Chrome doesn't allow picking colours from this special page</Typography>\n        : null}\n\n        <Grid \n          container\n          direction=\"row\"\n          justify=\"flex-end\"\n          >\n            <Button onClick={showPointer}>\n              <ColorizeIcon />\n            </Button>\n\n            <Button>\n              <TuneIcon />\n            </Button>\n            \n            <Button>\n              <LibraryAddIcon />\n            </Button>\n          </Grid>\n        <Typography variant=\"h3\">hello</Typography>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Home;",{"ruleId":"25","severity":1,"message":"26","line":2,"column":8,"nodeType":"27","messageId":"28","endLine":2,"endColumn":12},{"ruleId":"29","severity":1,"message":"30","line":11,"column":23,"nodeType":"31","messageId":"32","endLine":11,"endColumn":25},{"ruleId":"25","severity":1,"message":"33","line":4,"column":10,"nodeType":"27","messageId":"28","endLine":4,"endColumn":20},{"ruleId":"25","severity":1,"message":"34","line":9,"column":8,"nodeType":"27","messageId":"28","endLine":9,"endColumn":9},{"ruleId":"25","severity":1,"message":"35","line":17,"column":7,"nodeType":"27","messageId":"28","endLine":17,"endColumn":13},{"ruleId":"25","severity":1,"message":"36","line":22,"column":9,"nodeType":"27","messageId":"28","endLine":22,"endColumn":14},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'IconButton' is defined but never used.","'$' is defined but never used.","'bgPage' is defined but never used.","'hello' is assigned a value but never used."]